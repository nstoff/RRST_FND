---
format:
  html:
    embed-resources: true
    toc: true #to show table of contents
editor: visual
---

## 0) Data and Preparation

Respiratory Interoception; Analysis of Site Switzerland

Analysis of participants of site CH from 15.10.23 until 10.09.2024;

```{r}
#| output: false
#| warning: FALSE
#| error: FALSE

# remove everything that we stored in the environment
rm(list=ls()) 

# Load necessary libraries
library(readr)
library(dplyr)
library(rstatix)
library(gtsummary)
library(ggplot2)
library(ggpubr)
library(openxlsx)
library(gt)
library(stats)
library(grDevices)
library(car)
library(stringr)  
library(lubridate)
library(Hmisc)

### 0.0 PREPARATION -----------------------------------------------------------
# load prepared and cleaned file from 00_preparation: df_yyyymmdd.csv
setwd("/Users/nataschastoffel/Documents/GitHub/interoception_NS")
df_RRST <- read_csv("/Users/nataschastoffel/Documents/GitHub/interoception_NS/data/processed/11-2024/Data.RRST_FINAL_20241118.csv")
df <- df_RRST[-c(1)] # remove additional column 

# excluded_pcodes <- c(14)  # pcodes that we want to exclude due to our exclusion criteria (that they were not able to perform the task adequetely; due to not understanding/performing with a 0.0000 sensitivity)
# Filter out the rows with the specified pcodes
# df <- df %>% filter(!pcode %in% excluded_pcodes)

#Set path for output files; working directory to the correct folder
setwd("~/Documents/GitHub/interoception_NS/output/RRST/10-2024")

df <- df %>%
  mutate(anx_dep_SUM = stai_t + bdi)# create one variable for the trait anxiety and depression to use as one variable in the model


# factor variables
factor_variables <- c('group', 'sex', 'psychotropic_medication', 'menopause', 'contraception')
# Apply as.numeric to the selected columns
df[factor_variables] <- lapply(df[factor_variables], as.factor)

# numeric variables
numeric_variables <- c('age', 'bmi', 'bdi', 'stai_s', 'stai_t', 'maia_total', 'anx_dep_SUM',
                     'sdq', 'ctq_total', 'ias', 'rrst_sensitivity', 
                     'traitPE_maiaRRST', 'traitPE_iasRRST', 'metascore')
# Apply as.numeric to the selected columns
df[numeric_variables] <- lapply(df[numeric_variables], as.numeric)

# define required subgroups
df_female <- df[df$sex == "1", ]
df_male <- df[df$sex == "2", ]

df_HC <- df[df$group == "0", ]
df_FND <- df[df$group == "1", ]

```

## 1) Having a look at the Data

```{r}
#| output: false
#| warning: FALSE
#| error: FALSE

# Normality of Data -------------------
shapiro.test(df$rrst_sensitivity) #  normally distributed
shapiro.test(df$metascore)#  normally distributed

shapiro.test(df$age) # NOT normally distributed
shapiro.test(df$age[df$group == "1"]) # patients within themselves are normally distributed
shapiro.test(df$age[df$group == "0"]) # controls within themselves are normally distributed

shapiro.test(df$bdi) #  NOT normally distributed : p < 0.05
shapiro.test(df$bdi[df$group == "1"]) # patients within themselves are normally distributed
shapiro.test(df$bdi[df$group == "0"]) # controls within themselves are NOT normally distributed

shapiro.test(df$stai_t) #  normally distributed 

shapiro.test(df$stai_s) #  NOT normally distributed 
shapiro.test(df$stai_s[df$group == "1"]) # patients within themselves are normally distributed
shapiro.test(df$stai_s[df$group == "0"]) # controls within themselves are NOT normally distributed : p < 0.05

shapiro.test(df$ctq_total) #  NOT normally distributed : p < 0.05
shapiro.test(df$ctq_total[df$group == "1"]) # patients within themselves are also NOT normally distributed
shapiro.test(df$ctq_total[df$group == "0"]) # controls within themselves are also NOT normally distributed

shapiro.test(df$sdq) #  NOT normally distributed : p < 0.05
shapiro.test(df$sdq[df$group == "1"]) # patients within themselves are NOT normally distributed
shapiro.test(df$sdq[df$group == "0"]) # controls within themselves are NOT normally distributed : p < 0.05

shapiro.test(df$maia_total) # normally distributed 
shapiro.test(df$traitPE_maiaRRST) # NOT normally distributed with p < 0.05
shapiro.test(df$traitPE_maiaRRST[df$group == "1"]) # within patients trait PE is NOT normally distributed with p < 0.05
shapiro.test(df$traitPE_maiaRRST[df$group == "0"]) # within controlstrait PE is NOT normally distributed with p < 0.05

shapiro.test(df$ias) # NOT normally distributed 
shapiro.test(df$traitPE_iasRRST) # NOT normally distributed with p < 0.05
shapiro.test(df$traitPE_iasRRST[df$group == "1"]) # within patients trait PE  is NOT normally distributed with p < 0.05
shapiro.test(df$traitPE_iasRRST[df$group == "0"]) # within controlstrait PE  is NOT normally distributed with p < 0.0

shapiro.test(df$bmi) # NOT normally distributed with p < 0.05
shapiro.test(df$bmi[df$group == "1"]) # within patients bmi is normally distributed 
shapiro.test(df$bmi[df$group == "0"]) # within control bmi is NOT normally distributed with p < 0.05


## 1.1 testing co-dependency of variables by creating a correlation matrix -----
# in order to run a correlation, all variables must be numeric (but we create new variables, so it wont mess with our variables that we defiend as factors)
corr_matrix <- cor(df[, c("age","bmi", "bdi", "stai_s", "stai_t", "ctq_total",
                          "ias", "maia_total", "sdq", "rrst_sensitivity", 
                          "traitPE_iasRRST", "traitPE_maiaRRST", "metascore")], use = "complete.obs")

# Set the cutoff for high correlations, that we then want to exclude
cutoff <- 0.7

# Find the indices of correlations that are greater than 0.8 and exclude self-correlations (diagonal)
high_corr <- which(abs(corr_matrix) > cutoff & abs(corr_matrix) < 1, arr.ind = TRUE)

# Display the pairs of variables with high correlations
high_corr_pairs <- data.frame(
  Var1 = rownames(corr_matrix)[high_corr[, 1]],
  Var2 = colnames(corr_matrix)[high_corr[, 2]],
  Correlation = corr_matrix[high_corr]
)

# View the pairs
print(high_corr_pairs) # stai and bdi are highly correlated, which we do accept though as this is a common clinical happening
cor.test(df$bdi, df$stai_t) # reason for using sum scores

### 1.2 Group Differences as Baseline of Variables of Interst ---------------------------------------------
# parametric t-test for NORMALLY distributed data
res<-t.test(df$stai_t[df$group=="1"], df$stai_t[df$group=="0"])
res # SIG difference between groups with p < 0.05
res<-t.test(df$maia_total[df$group=="1"], df$maia_total[df$group=="0"])
res # SIG difference between groups with p < 0.05
res<-t.test(df$rrst_sensitivity[df$group=="1"], df$rrst_sensitivity[df$group=="0"])
res # no sig difference between groups
res<-t.test(df$metascore[df$group=="1"], df$metascore[df$group=="0"])
res # no sig difference between groups

# non paramatric wilcox test for NOT normally distributed data 
res<-wilcox.test(df$ias[df$group=="1"], df$ias[df$group=="0"])
res # no sig difference between groups
res<-wilcox.test(df$bdi[df$group=="1"], df$bdi[df$group=="0"])
res # SIG difference between groups with p < 0.05
res<-wilcox.test(df$stai_s[df$group=="1"], df$stai_s[df$group=="0"])
res # SIG difference between groups with p < 0.05
res<-wilcox.test(df$ctq_total[df$group=="1"], df$ctq_total[df$group=="0"])
res # SIG difference between groups with p < 0.05
res<-wilcox.test(df$sdq[df$group=="1"], df$sdq[df$group=="0"])
res # SIG difference between groups with p < 0.05
res<-wilcox.test(df$ias[df$group=="1"], df$ias[df$group=="0"])
res # no sig difference between groups
res<-wilcox.test(df$traitPE_iasRRST[df$group=="1"], df$traitPE_iasRRST[df$group=="0"])
res # SIG difference between groups with p < 0.05
res<-wilcox.test(df$traitPE_maiaRRST[df$group=="1"], df$traitPE_maiaRRST[df$group=="0"])
res # no sig difference between groups
res<-wilcox.test(df$bmi[df$group=="1"], df$bmi[df$group=="0"])
res # no sig difference between groups

```
# Identifying Outlier to exclude 
```{r}
# Testing Outlier using boxplot (standard deviation)
df %>% 
  group_by(group) %>%
  identify_outliers(rrst_sensitivity)
# one outlier identified = P063 for rrst_sensitivity 

#### Box-Plot with Jitter
plotBoxplotGroups <- function(df, var , tit ){ 
  plot <- ggplot(df, aes(x = group, y = var, fill = group)) + 
    geom_boxplot(show.legend = TRUE) + # Show legend for boxplot
    labs(y = "Score") + 
    theme_classic() + 
    scale_fill_manual(values = c("#868686FF", "#BB4038")) + 
    scale_x_discrete(labels = c("HC", "FND")) +  
    guides(fill = "none") + # Remove the legend
    ggtitle(tit) +
    xlab("") +
    geom_jitter(shape = 16, position = position_jitter(0.2))
  
  return(plot)
}

p1 <- plotBoxplotGroups(df, (df$rrst_sensitivity), "Respiration Sensitivity") + 
  stat_compare_means(method = "t.test", paired = FALSE, label.x = 1.3)
p1

# Filter the rows where rrst_sensitivity is greater than 8 and display pcode (visually detected as extreme)
filtered_pcodes <- df[df$rrst_sensitivity > 8, "pcode"]
print(filtered_pcodes) 
# P063

# Calculate mean and standard deviation of rrst_sensitivity
mean_rrst <- mean(df$rrst_sensitivity)
sd_rrst <- sd(df$rrst_sensitivity)
# Define the threshold for filtering (mean + 2.5 * SD)
threshold <- mean_rrst + 2.5 * sd_rrst # 7.07
# Filter the pcodes for rrst_sensitivity greater than the threshold
filtered_pcodes <- df[df$rrst_sensitivity > threshold, "pcode"]
# View the result
filtered_pcodes
# P063

# Testing the Assumptions in the main model (rrst sensitivity predicted by clinical variables) 
# model:
lmrrst <- lm(
  rrst_sensitivity ~ group + sex + bmi + psychotropic_medication + anx_dep_SUM + ctq_total + sdq,
  data = df)
# testing assumptions
plot(lmrrst, which=1) # testing the assumptions of Linearity and Homoscedasticity with residuals vs fitted plot: the line should more or less be straight: observation 56 is a clear outlier
plot(lmrrst, which=2) # testing the assumptions normality of residuals with  standardized quantiles: the data points should more or less on the line: observation 56 is a clear outlier (not as extreme but also noted: 81, 65)
plot(lmrrst, which=3) # testing the assumption of homoscedasticity with scale-location plot--> if there is an incline then we should consider log transformation: observation 56 is a clear outlier (not as extreme but also noted: 81, 65)
plot(lmrrst, which=5) # testing leverage and influence = when an outlier has a lot of leverage over the regression line (high leverage & large residual; these points will lie close to the right top or bottom corners): observation 56 is a clear outlier (not as extreme but also noted: 81, 6)
# observation 56 (consistent outlier) = P063

df_exclusion <- df[df$pcode != "63", ]

p1b <- plotBoxplotGroups(df_exclusion, (df_exclusion$rrst_sensitivity), "Respiration Sensitivity") + 
  stat_compare_means(method = "t.test", paired = FALSE, label.x = 1.3)
print(p1b)

pdf("1.4.1b_RRST_box_exclusion_SIG.pdf")
p1b
dev.off()

# Summary of Change - depending on Exclusion of Outlier
summary(df$rrst_sensitivity)  # no sig difference between group (cut of 0.05)
summary(df_exclusion$rrst_sensitivity) # sig difference between group (cut of 0.05)


```



### Demographic Summary Table

```{r}
#| warning: FALSE
#| error: FALSE

# overview across group and sex distribution
tbl <- df %>%
  mutate(sex = factor(sex, levels = c("1", "2"), labels = c("female", "male"))) %>%
  mutate(group = factor(group, levels = c("0", "1"), labels = c("HC", "FND")))
tbl1<-table(tbl$group,tbl$sex)
tbl1

# overview for mean age across group
summary_stats <- tbl %>%
  group_by(group) %>%
  get_summary_stats(age, type = "full") # 'full' includes mean, SD, min, max, etc.
print(summary_stats)

res<-t.test(df$age[df$group == "0"], df$age[df$group == "1"]) # 
res # no sig difference between the groups in age


# SUMMARY TABLE DEMOGRAPHICS -----
df_tbl <- df %>%
  mutate(sex = factor(sex, levels = c("1", "2"), labels = c("male", "female"))) %>%
  mutate(group = factor(group, levels = c("0", "1"), labels = c("HC", "FND"))) %>%
  mutate(psychotropic_medication = factor(psychotropic_medication, levels = c("0", "1"), labels = c("no", "yes"))) 

library(gtsummary)
library(dplyr)

# Select relevant columns from df_tbl
Data.t <- select(df_tbl, c("group", "sex", "age", "psychotropic_medication", "bmi", "bdi", "stai_s", "ctq_total", "sdq"))

# Create the summary table
tbl1 <- Data.t %>%
  tbl_summary(
    by = group,
    missing = "no",
    statistic = list(
      age = "{mean} ({sd})",
      sex = "{n} ({p})",
      psychotropic_medication ="{n} ({p})",
      bmi = "{mean} ({sd})",
      bdi = "{mean} ({sd})",
      stai_s = "{mean} ({sd})",
      ctq_total = "{mean} ({sd})",
      sdq = "{mean} ({sd})"
    ),
    digits = list(age = 1, sex = 1, psychotropic_medication = 1, contraception = 1, menopause = 1),
    label = list(age = "Age",
                 sex = "Sex",
                 psychotropic_medication= "Intake of psychotropic Medication (yes)",
                 bmi = "Body Mass Index (kg/m²)",
                 bdi = "Depression (BDI-II)",
                 stai_s = "State Anxiety (STAI-S)",
                 ctq_total = "Childhood Trauma (CTQ total)",
                 sdq = "Dissociation (SDQ-20)")
  ) %>%
  modify_header(list(label ~ "**Variable**")) %>%
  modify_caption("**Demographics Overview**") %>%
  modify_spanning_header(c("stat_1", "stat_2") ~ "**Group**") %>%
  add_p( test = list(
        age ~ "t.test",            # t-test for numeric variables (even though NOT normally distributed; rather use wilcox and then the median instead of the mean??)
        bmi ~ "t.test",            # t-test for bmi
        sex ~ "chisq.test",        # chi-square test for factor variables
        psychotropic_medication ~ "chisq.test",  # Fisher's exact test for small samples
        bdi ~ "t.test",
        stai_s ~ "t.test",
        ctq_total = "t.test",
        sdq="t.test"
      )) %>% #add p-value# add p-value (in case different variable should be tested differently, create a list and specify like that: add_p(test = list(age = "t.test", bmi = "wilcox.test"))
  add_overall(last = FALSE)

# Display the table
tbl1

```

### FND Summary Table

```{r}
#| warning: FALSE
#| error: FALSE
# 1.4 SUMMARY TABLE for FND symptoms -----
# create variable of duation of months
df_FND <- df_FND %>%
  mutate(duration_months = interval(date_symptom_onset, date) %/% months(1)) # calculate month duration

as.numeric(df_FND$duration_months)

# Select only the defined variables
df_tbl <- df_FND %>%
  mutate(sex = factor(sex, levels = c("1", "2"), labels = c("female", "male"))) 

library(gtsummary)
library(dplyr)

# Select relevant columns from df_tbl
Data.t <- select(df_tbl, c("sex", "psychotropic_medication", "duration_months", "fds", "motor", "weakness", "sensory", "pppd", "cognitive"))

# Create the summary table
tbl <- Data.t %>%
  tbl_summary(
    by = sex,
    missing = "no",
    statistic = list(
      psychotropic_medication = "{n} ({p})",
      duration_months = "{mean} ({sd})",
      fds = "{n} ({p})",
      motor = "{n} ({p})",
      weakness = "{n} ({p})",
      sensory = "{n} ({p})",
      pppd = "{n} ({p})",
      cognitive = "{n} ({p})"
      ),
    digits = list(psychotropic_medication = 1,duration_months = 1,fds = 1,motor = 1,weakness = 1,sensory = 1,pppd = 1,cognitive = 1),
    label = list(
      sex = "Sex",
      psychotropic_medication = "Psychotropic Medication Intake [yes]",
      duration_months = "Symptom Duration [in months]",
      fds = "Functional Dissociative Seizures [yes]",
      motor = "motor + symptoms [yes]",
      weakness = "motor - symptoms [yes]",
      sensory = "sensory symptoms [yes]",
      pppd = "dizziness (PPPD) [yes]",
      cognitive = "cognitive symptoms [yes]"
    )
  ) %>%
  modify_header(list(label ~ "**Variable**")) %>%
  modify_caption("**Clinical Characteristics**") %>%
  modify_spanning_header(c("stat_1", "stat_2") ~ "**Group**") %>%
  add_overall(last = FALSE)

# Print the summary table
tbl
```

## 2) Group Differences - Baseline

Here we visualize the different distribution per group across all variables

```{r}
#| warning: FALSE
#| error: FALSE
df$group <- as.factor(df$group)

plotViolinGroups <- function(df, var , tit ){ 
  plot <-ggplot(df, aes(x=group, y=var, fill=group)) + # this is just the ground structure. We have group on x axis, our variable score on y, and we want to seperate the groups. 
    geom_violin(show.legend = FALSE, width = 0.7, trim = FALSE, alpha = 0.8)+ # here we say what kind of plot we want to make; namely violin to show the distrubition of the original data (width to make it less wide and thus prettier) 
    stat_summary(show.legend = FALSE, fun = median, geom = "point", color = "black", size = 2) +  # Add median point without legend
    labs(y = "Score") + # These are just the different titles
    theme_classic()+ # here we have the background, simple white :)
    scale_fill_manual(values = c("#868686FF", "#BB4038"))+ # google HEX codes and find your own colours. 
    scale_x_discrete(labels=c("Controls", "Patients"))+  # these are our labels for the x axis
    guides(fill=guide_legend(title="Timepoint"))+ # and a title for our legend
    ggtitle(tit) +
    xlab("")
  
  return(plot)
}

p1 <- plotViolinGroups(df,df$bdi,"BDI - Depression")+ ggpubr::stat_compare_means(method = "wilcox.test", paired = FALSE, label.x = 1.3)
p1


p2 <- plotViolinGroups(df,df$stai_s,"STAI - State Anxiety")+ stat_compare_means(method = "t.test", paired = FALSE, label.x = 1.3)
p3 <- plotViolinGroups(df,df$stai_t,"STAI - Trait Anxiety")+ stat_compare_means(method = "wilcox.test", paired = FALSE, label.x = 1.3)
gridExtra::grid.arrange(p2, p3, ncol = 2)


p4 <- plotViolinGroups(df,df$ctq_total,"CTQ - Childhood Trauma")+ stat_compare_means(method = "wilcox.test", paired = FALSE, label.x = 1.3)
p4

p5 <- plotViolinGroups(df,df$sdq,"SDQ-20 - Dissociation")+ stat_compare_means(method = "wilcox.test", paired = FALSE, label.x = 1.3)
p5


p6 <- plotViolinGroups(df,df$maia_total,"MAIA - Interoceptive Awareness")+ stat_compare_means(method = "t.test", paired = FALSE, label.x = 1.3)
p6


p7 <- plotViolinGroups(df,df$ias,"IAS - Interoceptive Accuracy")+ stat_compare_means(method = "t.test", paired = FALSE, label.x = 1.3)
p7


p8 <- plotViolinGroups(df,df$traitPE_maiaRRST,"TraitPE MAIA-RRST")+ stat_compare_means(method = "wilcox.test", paired = FALSE, label.x = 1.3)
p9 <- plotViolinGroups(df,df$traitPE_iasRRST,"TraitPE IAS-RRST")+ stat_compare_means(method = "wilcox.test", paired = FALSE, label.x = 1.3)
gridExtra::grid.arrange(p8, p9, ncol = 2)


p10 <- plotViolinGroups(df,df$rrst_sensitivity,"Respiratory Sensitivity")+ stat_compare_means(method = "t.test", paired = FALSE, label.x = 1.3)
p11 <- plotViolinGroups(df,df$metascore,"Respiratory Metacognition")+ stat_compare_means(method = "t.test", paired = FALSE, label.x = 1.3)
gridExtra::grid.arrange(p10, p11, ncol = 2)

```

## 3) Interoception

Here we model interoceptive variables using group and clinical predictors

```{r}
#| warning: FALSE
#| error: FALSE

# predicting group with interoceptive variables and most important covariates
glm <- glm(formula = group ~  sex + rrst_sensitivity  + metascore + maia_total + ias + anx_dep_SUM + ctq_total + sdq,
            data = df,
            family = binomial) # as group has two levels
summary(glm) # SDQ predict group

# predciting rrst sensitvity with covariates
lm<-lm(rrst_sensitivity ~ group + sex + bmi + psychotropic_medication + anx_dep_SUM + ctq_total + sdq,
  data = df)
summary(lm) #  # SDQ sig associated with rrst sensitvity

# predciting  rrst metascore with covariates
lm<-lm(metascore ~ group + sex + bmi + psychotropic_medication + anx_dep_SUM + ctq_total + sdq,
  data = df)
summary(lm) #  # SDQ and CTQ sig associated with metascore


# predciting  traitPE uing RRST and MAIA with covariates
lm<-lm(traitPE_maiaRRST ~ group + sex + bmi + psychotropic_medication + anx_dep_SUM + ctq_total + sdq,
  data = df)
summary(lm) #  ANX-DEP sum score sig assocaited with traitPE using RRST and MAIA

# predciting  traitPE uing RRST and MAIA with covariates
lm<-lm(traitPE_iasRRST ~ group + sex + bmi + psychotropic_medication + anx_dep_SUM + ctq_total + sdq,
  data = df)
summary(lm) #  no sig assocaition with traitPE usign RRST and IAS

```

## 4) Symptom Severity

Here we model symptom severity (SFMDRS/CGI/SDQ) using interoceptive predictors

```{r}
#| warning: FALSE
#| error: FALSE
# for FND group only
# Compute the correlation matrix with variables of symptom severity to see whether they correlate
# Select the desired variables
severity_variables <- df_FND[, c("sfmdrs", "cgi", "sdq", "sum_positive_signs", "sum_severity")]

# Compute the correlation matrix with rcorr
correlation_results <- rcorr(as.matrix(severity_variables))

# Extract correlation coefficients
cor_matrix <- correlation_results$r

# Extract p-values
p_matrix <- correlation_results$P

# Print results
cor_matrix
p_matrix

# SIG correlations of different symptom severity scores
### CGI & SFMDRS corr: r=0.5770168, p=0.0000412958
### CGI & SUM_POS corr: r=0.5743582, p=0.0000456498
### SDQ & SUM_POS corr: r=0.4810280, p=0.0009486588
### CGI & SUM_SEVERITY corr: r=0.35358298, p=0.01854743

# modeling the symptom severity of FND patients by adding the interoceptive variables as predictors
#SFMDRS
sfmdrslm <- lm(formula = sfmdrs ~  rrst_sensitivity + metascore + ias + maia_total,
               data = df_FND) 
summary(sfmdrslm)   

#CGI
cgilm <- lm(formula = cgi ~   rrst_sensitivity + metascore + ias + maia_total,
            data = df_FND) 
summary(cgilm) 

#Sum score pos signs  (pos signs like wekaness in deltoid/stenocleido etc, co-contractions, give way weakness, hoover, hyposensitivity)
sum_pos_lm <- lm(formula = sum_positive_signs ~  rrst_sensitivity + metascore + ias + maia_total,
               data = df_FND) 
summary(sum_pos_lm)   # weak evidence for association with rrst_sensitivity p=0.0504

#Sum score severity (motor weakness and seizure frequency)
sum_pos_lm <- lm(formula = sum_severity ~  rrst_sensitivity + metascore + ias + maia_total,
               data = df_FND) 
summary(sum_pos_lm)  # weak evidence for association with metascore p= 0.069

#SDQ
sdqlm <- lm(formula = sdq ~ rrst_sensitivity + metascore + ias + maia_total,
            data = df_FND) 
summary(sdqlm) 


#SDQ using FULL POPULATION (as we also have sdq scores for HC)
lm <- lm(formula = sdq ~ group + rrst_sensitivity + metascore + ias + maia_total,
            data = df) 
summary(lm) # SDQ sig assocaited with group, RRST sensitivity, and IAS
```

## 5) Interoception per Group

Here we model interoceptive variables using clinical predictors, separatly per group

```{r}
#| warning: FALSE
#| error: FALSE
# modeling the variance of interoceptive performance by including the common/typical co-variates 
# here including SEX and AGE as we dont control for it anymore in the design (HC vs FND)
# RRST sensitivity FND
lmrrst <- lm(
  rrst_sensitivity ~ sex + age + bmi + anx_dep_SUM + ctq_total + sdq,
  data = df_FND)
summary(lmrrst) # SDQ

# RRST sensitivity HC
lmrrst <- lm(
  rrst_sensitivity ~ sex + age + bmi + anx_dep_SUM + ctq_total + sdq,
  data = df_HC)
summary(lmrrst) # BMI and ANX-DEP

# RRST metascore FND
lmmeta <- lm(
  metascore ~ sex + age + bmi + anx_dep_SUM + ctq_total + sdq,
  data = df_FND)
summary(lmmeta) # SDQ and AGE

# RRST metascore HC
lmmeta <- lm(
  metascore ~ sex + age + bmi + anx_dep_SUM + ctq_total + sdq,
  data = df_HC)
summary(lmmeta)

# TraitPE_maia FND
lmtraitPEmaia <- lm(
  traitPE_maiaRRST ~ sex + age + bmi + anx_dep_SUM+ ctq_total + sdq,
  data = df_FND)
summary(lmtraitPEmaia)  # AGE

# TraitPE_maia HC
lmtraitPEmaia <- lm(
  traitPE_maiaRRST ~ sex + age + bmi + anx_dep_SUM + ctq_total + sdq,
  data = df_HC)
summary(lmtraitPEmaia) # Anx-Dep and CTQ

# TraitPE_ias FND
lmtraitPEias <- lm(
  traitPE_iasRRST ~ sex + age + bmi + anx_dep_SUM + ctq_total + sdq,
  data = df_FND) 
summary(lmtraitPEias) 

# TraitPE_maia HC
lmtraitPEias <- lm(
  traitPE_iasRRST ~ sex + age + bmi + anx_dep_SUM + ctq_total + sdq,
  data = df_HC)
summary(lmtraitPEias) 
```

## 6) Visualization of sig associations

Here we visualize association that became significant in the statistical models above

```{r}
#| warning: FALSE
#| error: FALSE

# SDQ-RRST_sensitivity
RRST_sdq <- ggplot(df, aes(x = sdq, y = rrst_sensitivity, color = as.factor(group))) +
  geom_point() +  # Scatterplot for both groups
  geom_smooth(method = "lm", se = TRUE) +  # Add regression lines and SE
  labs(x = "Dissociative Score (SDQ-20)", 
       y = "Respiratory Sensitivity (RRST)", 
       title = "Respiratory Interoception (FND vs HC)",
       color = "Group") +  # Label for the legend
  theme_minimal() +
  scale_color_manual(values = c("1" = "#E95248", "0" = "#868686FF"),
                     labels = c("0" = "HC", "1" = "FND"))  # Custom labels
RRST_sdq

# SDQ-metascore
RRST_meta_combined <- ggplot(df, aes(x = sdq, y = metascore, color = as.factor(group))) +
  geom_point() +  # Scatterplot for both groups
  geom_smooth(method = "lm", se = TRUE) +  # Add regression lines and SE
  labs(x = "Dissociative Score (SDQ-20)", 
       y = "Respiratory Metacognition (RRST-AUC)", 
       title = "Respiratory Metacognition (FND vs HC)",
       color = "Group") +  # Label for the legend
  theme_minimal() +
  scale_color_manual(values = c("1" = "#E95248", "0" = "#868686FF"),
                     labels = c("0" = "HC", "1" = "FND"))  # Custom labels
RRST_meta_combined

# SDQ-IAS
IAS_sdq <- ggplot(df, aes(x = sdq, y = ias, color = as.factor(group))) +
  geom_point() +  # Scatterplot for both groups
  geom_smooth(method = "lm", se = TRUE) +  # Add regression lines and SE
  labs(x = "Dissociative Score (SDQ-20)", 
       y = "Interoceptive Accuracy Scale (Self-Report)", 
       title = "Interoception and Dissociation (FND vs HC)",
       color = "Group") +  # Label for the legend
  theme_minimal() +
  scale_color_manual(values = c("1" = "#E95248", "0" = "#868686FF"),
                     labels = c("0" = "HC", "1" = "FND"))  # Custom labels
IAS_sdq

# CTQ-metascore
CTQ_meta<- ggplot(df, aes(x = ctq_total, y = metascore, color = as.factor(group))) +
  geom_point() +  # Scatterplot for both groups
  geom_smooth(method = "lm", se = TRUE) +  # Add regression lines and SE
  labs(x = "Childhood Trauma Score (CTQ-20)", 
       y = "Respiratory Metacognition (RRST-AUC)", 
       title = "Childhoodtrauma and Metacognition (FND vs HC)",
       color = "Group") +  # Label for the legend
  theme_minimal() +
  scale_color_manual(values = c("1" = "#E95248", "0" = "#868686FF"),
                     labels = c("0" = "HC", "1" = "FND"))  # Custom labels
CTQ_meta

# STAI-T-RRST_sensitivity
anxdepPE <- ggplot(df, aes(x = anx_dep_SUM, y = traitPE_maiaRRST, color = as.factor(group))) +
  geom_point() +  # Scatterplot for both groups
  geom_smooth(method = "lm", se = TRUE) +  # Add regression lines and SE
  labs(x = "Trait Anxiety (STAI-T) and Depression (BDI) Sum Score", 
       y = "Trait Prediction Error (MAIA-RRST)", 
       title = "Respiratory Interoception (FND vs HC)",
       color = "Group") +  # Label for the legend
  theme_minimal() +
  scale_color_manual(values = c("1" = "#E95248", "0" = "#868686FF"),
                     labels = c("0" = "HC", "1" = "FND"))  # Custom labels
anxdepPE
#NOTE. 0 = perfect prediction: positive values indicate OVERestimation and negative values UNDERestimation


```

## 6) Overivew Results

Clinical Covariates: BMI, SEX, ANX-DEP-SUM, CTQ, SDQ\
Interoceptive Variables: RRST sensitivity, Metascore, MAIA, IAS, TraitPE of RRST using either MAIA or IAS

\
No interoceptive variable is associated with group, nor symptom severity.

Higher SDQ was sig associated with group (p=0.000701), while lower IAS scores (t=-2.245, p=0.0273), lower RRST-sensitvity (t=-2-248, p=0.0271), and FND group (t=5.772, p=1.21e-07 ) was associated with higher SDQ scores.

Higher SDQ scores are associated with lower RRST sensitivity (t=-2.984, p=0.00374), when controlling for other clinical variables.

Higher scores in CTQ (t=2.150, p=0.0345), and lower SDQ (t=-2.929, p=0.0044) are associated with higher Metascores, when controlling for clinical variables.

Lower scores on ANX-DEP-SUM are associated with higher TraitPE using MAIA (t=-3.509 , p=0.000733), while no sig association has been detected with the TraitPE using IAS.

Separate Analysis per group:

FND only:

-   SDQ is associated RRST sensitivity and metascore

-   Age is associated with metascore, TraitPE-maia and TraitPE-ias

HC only:

-   ANX-DEP and BMI is associated with RRST sensitvitiy

-   ANX-DEP and CTQ is associated with TraitPE-maia
