df$menopause <- as.factor(df$menopause)
df$contraception <- as.factor(df$contraception)
# define required subgroups
df_female <- df[df$sex == "1", ]
df_male <- df[df$sex == "2", ]
df_HC <- df[df$group == "0", ]
df_FND <- df[df$group == "1", ]
# outlier (typo in BMI for one female)
mean_bmi <- mean(df_female$bmi, na.rm = TRUE)
df$bmi[df$bmi < 10] <- mean_bmi # due to typo there is a wrong BMI that should be changed with the MEAN (of females)
df_female <- df[df$sex == "1", ] # redo the female subgroup (after it has been changed)
hist(df$hep_difficulty_heart)
shapiro.test(df$hep_difficulty_heart)  # NOT normally distributed with  p < 0.05
shapiro.test(df$hep_difficulty_heart[df$group == "1"]) # within patients hep difficulty heart is NOT normally distributed with  p < 0.05
shapiro.test(df$hep_difficulty_heart[df$group == "0"]) # within controls hep difficulty heart is NOT normally distributed with  p < 0.05
summary(df$hep_difficulty_heart)
summary(df_FND$hep_difficulty_heart)
summary(df_HC$hep_difficulty_heart)
hist(df$hep_difficulty_sound)
shapiro.test(df$hep_difficulty_sound)  # NOT normally distributed with  p < 0.05
shapiro.test(df$hep_difficulty_sound[df$group == "1"]) # within patients hep difficulty sound is NOT normally distributed with  p < 0.05
shapiro.test(df$hep_difficulty_sound[df$group == "0"]) # within controls hep difficulty sound is NOT normally distributed with  p < 0.05
summary(df$hep_difficulty_sound)
summary(df_FND$hep_difficulty_sound)
summary(df_HC$hep_difficulty_sound)
# using wilcox because of non-normal distribution
res<-wilcox.test(df$hep_difficulty_heart[df$group=="1"], df$hep_difficulty_heart[df$group=="0"])
res   # p-value = 0.004965
res<-wilcox.test(df_FND$hep_difficulty_sound, df_FND$hep_difficulty_heart, paired = TRUE)
res#  t = 8.341, p-value = 1.567e-10
res<-wilcox.test(df$hep_difficulty_sound[df$group=="1"], df$hep_difficulty_sound[df$group=="0"])
res # p-value = 0.1444
#| warning: FALSE
#| error: FALSE
## LOAD  EEG DATA  -----------------------------------------------------------
# load prepared and cleaned file from 00_preparation: df_yyyymmdd.csv
df_GMD <- read.xlsx("/Users/nataschastoffel/Documents/GitHub/interoception_NS/data/raw/12-2024/AverageTimeInterval_HEP_summary.xlsx")
df_GMD$pcode <- substr(df_GMD$pcode, 1, 4) # keeps only the first four digits (P001 etc) in the names
df_GMD$pcode <- sub("^P00", "", df_GMD$pcode) # gets rid of the P00 for all participants
df_GMD$pcode <- sub("^P0", "", df_GMD$pcode) # gets rid of the P0 for all participants
df_GMD$pcode <- sub("^P", "", df_GMD$pcode) # gets rid of the P for all participants
df<-merge(df, df_GMD, x.by=c("pcode"),y.by=c("pcode"),all.x=TRUE, all.y=TRUE) # you can also merge with more criteria, for this you can add more column names in x.by/y.by. Sometimes a bit difficult, better use right_join then
df <- df[complete.cases(df$GMD_HEART_310, df$GMD_HEART_510, df$GFP_HEART_285, df$C2_HEART_510, df$C2_HEART_510), ]
# redo required subgroups
df_female <- df[df$sex == "1", ]
df_male <- df[df$sex == "2", ]
df_HC <- df[df$group == "0", ]
df_FND <- df[df$group == "1", ]
shapiro.test(df$GMD_HEART_310) # normally distributed with  p > 0.05
shapiro.test(df$GMD_HEART_510) #   NOT normally distributed with  p < 0.05
# questionnaires
hist(df$maia_total)
shapiro.test(df$maia_total) # normally distributed
shapiro.test(df$traitPE_maiaHBT) #  normally distributed
shapiro.test(df$ias) # NOT normally distributed with  p < 0.05
shapiro.test(df$traitPE_iasHBT) # NOT normally distributed with p < 0.05
shapiro.test(df$traitPE_iasHBT[df$group == "1"]) # within patients traitPE is NOT normally distributed with p < 0.05
shapiro.test(df$traitPE_iasHBT[df$group == "0"]) # within controls traitPE is normally distributed
# AGE
shapiro.test(df$age) # NOT normally distributed with  p < 0.05
# SEX
table_sex_group <- table(df$sex, df$group)
# BMI
shapiro.test(df$bmi) #  normally distributed with  p < 0.05
# BDI
shapiro.test(df$bdi) #  NOT normally distributed with  p < 0.05
# STAI-T
shapiro.test(df$stai_t) #  NOT normally distributed with  p < 0.05
# STAI-S
shapiro.test(df$stai_s) #   normally distributed with  p > 0.05
# AGE
shapiro.test(df$age) #  normally distributed with  p < 0.05
res<-t.test(df$age[df$group=="1"], df$age[df$group=="0"])
res #  not sig
# SEX
table_sex_group <- table(df$sex, df$group)
# Perform the chi-squared test
res <- chisq.test(table_sex_group)
res # not sig
# AGE
shapiro.test(df$age) #  normally distributed with  p < 0.05
res<-t.test(df$age[df$group=="1"], df$age[df$group=="0"])
res #  p-value = 0.6338
# BMI
shapiro.test(df$bmi) #  NOT normally distributed with  p < 0.05
res<-wilcox.test(df$bmi[df$group=="1"], df$bmi[df$group=="0"])
res #  t = 2.4323, df = 72.349, p-value = 0.01748
# Medication
table_med_group <- table(df$medication_brain, df$group)
# Perform the chi-squared test
res <- chisq.test(table_med_group)
res # X-squared = 23.413, df = 1, p-value = 1.307e-06
# BDI
shapiro.test(df$bdi) #  NOT normally distributed with  p < 0.05
res<-wilcox.test(df$bdi[df$group=="1"], df$bdi[df$group=="0"])
res #  t = 6.3634, p-value = 2.436e-08
# STAI-T
shapiro.test(df$stai_t) #   normally distributed with  p > 0.05
res<-t.test(df$stai_t[df$group=="1"], df$stai_t[df$group=="0"])
res #  t = 3.8164,p-value = 0.0002566
# STAI-S
shapiro.test(df$stai_s) #   NOT normally distributed with  p > 0.05
res<-wilcox.test(df$stai_s[df$group=="1"], df$stai_s[df$group=="0"])
res # t = 4.9045, p-value = 6.507e-06
cor.test(df$stai_t, df$stai_s)
cor.test(df$bdi, df$stai_s)
cor.test(df$stai_t, df$bdi)
# MAIA
shapiro.test(df$maia_total) # normally distributed
res<-t.test(df$maia_total[df$group=="1"], df$maia_total[df$group=="0"])
res
shapiro.test(df$traitPE_maiaHBT) #  normally distributed
res<-t.test(df$traitPE_maiaHBT[df$group=="1"], df$traitPE_maiaHBT[df$group=="0"])
res
# IAS
shapiro.test(df$ias) # NOT normally distributed with  p < 0.05
res<-wilcox.test(df$traitPE_maiaHBT[df$group=="1"], df$traitPE_maiaHBT[df$group=="0"])
res
shapiro.test(df$traitPE_iasHBT) # NOT normally distributed with p < 0.05
res<-wilcox.test(df$traitPE_maiaHBT[df$group=="1"], df$traitPE_maiaHBT[df$group=="0"])
res
# 1.3.2 MAIA -----
maia<-dplyr::select(df, pcode, group, maia_attreg, maia_note, maia_distr, maia_worry, maia_aware, maia_sfreg, maia_body, maia_trust)
#Make long data
maia_long <- gather(maia, key = "subscale", value = "score", -pcode, -group) # make data set long (so that every p code has 6 rows, one for each of the subscores of ctq)
maia_long$subscale<-as.factor(maia_long$subscale)
maia_long$subscale <- factor(maia_long$subscale, levels = rev(levels(maia_long$subscale)))
maia_long$score<-as.numeric(maia_long$score)
maia_long$group<-as.factor(maia_long$group)
maia_long$group <- factor(maia_long$group, levels = c(0, 1), labels = c("HC", "FND"))
# Calculate mean, median, CI, SE
library(dplyr)
alpha=0.05
maia.summary <- maia_long %>%
group_by(group,subscale)%>%
dplyr::summarise(
se = sd(score) / sqrt(length(score)),
t=qt((1-alpha)/2 + .5, length(score)-1),   # tend to 1.96 if sample size is big enough
CI=t*se,
score = mean(score), .groups = 'drop') # you can use here mean or median depending on data distribution
maia.summary # according to this order name the lables in the following plot p
# STATISTICS
# Multiple t-tests using FDR correction for multiple comparisons (FDR or bonferroni)
library(rstatix)
stat.test <- maia_long %>%
group_by(subscale) %>%
wilcox_test(score ~ group) %>%
adjust_pvalue(method = "fdr") %>% # if you don't want to correct for multiple comparisons you can comment out this line
add_significance()
stat.test <- maia_long %>%
group_by(subscale) %>%
wilcox_test(score ~ group) %>%
adjust_pvalue(method = "fdr") %>% # if you don't want to correct for multiple comparisons you can comment out this line
add_significance()
stat.test # subscales worrying, trusting, body and attention regulation are sig difference across groups
stat.test # subscales worrying, trusting, body and attention regulation are sig difference across groups
# Save the output to a text file
write.table(stat.test, file = "MAIA_subscales_stats.txt", sep = "\t", row.names = FALSE, col.names = TRUE, quote = FALSE)
# Filter for significant results (both * and **)
significant_results <- stat.test %>%
filter(p.adj.signif %in% c("*", "**")) %>%
select(subscale, p.adj.signif)  # Keep both subscale and significance level
# VISUALIZATION
# Plot
maia.summary <- maia.summary %>%
left_join(significant_results, by = "subscale") %>%
mutate(significance = ifelse(is.na(p.adj.signif), "", p.adj.signif))  # Add a column for asterisks
dodge <- position_dodge(width=0.9)
maiaplot<-maia.summary%>%
ggplot(aes(y = score, x = subscale, ymin=score-CI, ymax=score+CI, fill = group)) +
#ylim(-0.5,15)+
geom_bar(position=position_dodge(), stat="identity")+
geom_errorbar(position = dodge, width = 0.3)+
labs(x = "MAIA Subscales", y = "Scores")+
scale_fill_manual(values = c("#868686FF", "#BB4038"))+
ggtitle("MAIA - Interoceptive Awareness") + theme(plot.title = element_text(hjust = 0.5))+#add label of y-axis
theme_classic(base_size = 9) +       #select underlying theme
theme(axis.title.x=element_blank(),axis.text.y=element_text(size = 12, face ="bold"),
axis.text.x = element_text(angle = 45, hjust = 1, size = 12, face = "bold"),
legend.title = element_text(size = 12, face = "bold"),
legend.text = element_text(size=12), plot.title = element_text(hjust = 0.5))+
scale_x_discrete(
labels=c("Not-Worrying", "Trusting", "Self-Regulation", "Noticing", "Not-Distracting", "Body Listening", "Emotional Awareness", "Attention Regulation"))+
# ! careful in naming the graph (labels=c() ); print the order of the subscales wit maia.summary and then name it in the followig order for the graph
guides(fill=guide_legend(title="Groups"))+
geom_text(aes(label = significance), # define position
position = position_dodge(width = 0.9),
vjust = -0.5, size = 5, color = "black")  # Add significance asterisks above bars
maiaplot
# Save plot
plot.new()
# STATISTICS
# Multiple t-tests using FDR correction for multiple comparisons (FDR or bonferroni)
library(rstatix)
stat.test <- maia_long %>%
group_by(subscale) %>%
wilcox_test(score ~ group) %>%
adjust_pvalue(method = "fdr") %>% # if you don't want to correct for multiple comparisons you can comment out this line
add_significance()
# Save the output to a text file
write.table(stat.test, file = "MAIA_subscales_stats.txt", sep = "\t", row.names = FALSE, col.names = TRUE, quote = FALSE)
# Filter for significant results (both * and **)
significant_results <- stat.test %>%
filter(p.adj.signif %in% c("*", "**")) %>%
select(subscale, p.adj.signif)  # Keep both subscale and significance level
# Save the output to a text file
write.table(stat.test, file = "MAIA_subscales_stats.txt", sep = "\t", row.names = FALSE, col.names = TRUE, quote = FALSE)
stat.test # subscales worrying, trusting, body and attention regulation are sig difference across groups
# MAIA
shapiro.test(df$maia_total) # normally distributed
stat.test <- maia_long %>%
group_by(subscale) %>%
t_test(score ~ group) %>%
adjust_pvalue(method = "fdr") %>% # if you don't want to correct for multiple comparisons you can comment out this line
add_significance()
stat.test # subscales worrying, trusting, body and attention regulation are sig difference across groups
# Save the output to a text file
write.table(stat.test, file = "MAIA_subscales_stats.txt", sep = "\t", row.names = FALSE, col.names = TRUE, quote = FALSE)
# Filter for significant results (both * and **)
significant_results <- stat.test %>%
filter(p.adj.signif %in% c("*", "**")) %>%
select(subscale, p.adj.signif)  # Keep both subscale and significance level
stat.test # subscales worrying, trusting, body and attention regulation are sig difference across groups
# Save as png table
gt_table <- as_gt(tbl1) # convert to gt table
# Create the table summary
tbl1 <- Data.t %>%
tbl_summary(
by = group, # Grouping by 'group'
missing = "no",
statistic = list(
age = "{mean} ({sd})",
sex = "{n} ({p})",
medication_brain ="{n} ({p})",
bmi = "{median} ({IQR})",
bdi = "{median} ({IQR})",
stai_s = "{median} ({IQR})",
stai_t = "{mean} ({sd})"
),
digits = list(age = 1, sex = 1, medication_brain = 1, menopause = 1, bmi = 1, stai_s = 1, stai_t = 1, ctq_total = 1, sdq = 1),
label = list(
age = "Age (mean)",
sex = "Sex",
medication_brain = "Medication (psychotropic, antiepileptic, opioids, benzos)",
bmi = "Body Mass Index (median)",
bdi = "Depression (median)",
stai_s = "State Anxiety (median)",
stai_t = "Trait Anxiety (mean)"    )
) %>%
modify_header(list(label ~ "**Variable**")) %>%
modify_caption("**Demographics Overview**") %>%
modify_spanning_header(c("stat_1", "stat_2") ~ "**Group**") %>%
add_p(
test = list(
age = "t.test",
bmi = "wilcox.test",
bdi = "wilcox.test",
stai_s = "wilcox.test",
stai_t = "t.test",
sex = "fisher.test",
medication_brain = "fisher.test"
)
) %>%
add_overall(last = FALSE)
# Print the table
tbl1
# Save as png table
gt_table <- as_gt(tbl1) # convert to gt table
output_path <- file.path("Table1_Demographics.png")
gt::gtsave(gt_table, filename = output_path)
maiaplot<-maia.summary%>%
ggplot(aes(y = score, x = subscale, ymin=score-CI, ymax=score+CI, fill = group)) +
#ylim(-0.5,15)+
geom_bar(position=position_dodge(), stat="identity")+
geom_errorbar(position = dodge, width = 0.3)+
labs(x = "MAIA Subscales", y = "Scores")+
scale_fill_manual(values = c("#868686FF", "#BB4038"))+
ggtitle("MAIA - Interoceptive Awareness") + theme(plot.title = element_text(hjust = 0.5))+#add label of y-axis
theme_classic(base_size = 9) +       #select underlying theme
theme(
plot.title = element_text(hjust = 0.5, size = 18, face = "bold"),  # Title size
axis.title.x = element_text(size = 16, face = "bold"),  # X-axis title size
axis.title.y = element_text(size = 16, face = "bold"),  # Y-axis title size
axis.text.x = element_text(angle = 45, hjust = 1, size = 14, face = "bold"),  # X-axis text size
axis.text.y = element_text(size = 14, face = "bold"),  # Y-axis text size
legend.title = element_text(size = 14, face = "bold"),  # Legend title size
legend.text = element_text(size = 12)  # Legend text size
) +
scale_x_discrete(
labels=c("Not-Worrying", "Trusting", "Self-Regulation", "Noticing", "Not-Distracting", "Body Listening", "Emotional Awareness", "Attention Regulation"))+
# ! careful in naming the graph (labels=c() ); print the order of the subscales wit maia.summary and then name it in the followig order for the graph
guides(fill=guide_legend(title="Groups"))+
geom_text(aes(label = significance), # define position
position = position_dodge(width = 0.9),
vjust = -0.5, size = 5, color = "black")  # Add significance asterisks above bars
maiaplot
# Save plot
plot.new()
tiff("Table2_MAIA_Scores.tiff", height = 360, width = 500, units='mm' ,
compression = "lzw", res = 300)
maiaplot
dev.off() # Turn the PDF device off
maiaplot<-maia.summary%>%
ggplot(aes(y = score, x = subscale, ymin=score-CI, ymax=score+CI, fill = group)) +
#ylim(-0.5,15)+
geom_bar(position=position_dodge(), stat="identity")+
geom_errorbar(position = dodge, width = 0.3)+
labs(x = "MAIA Subscales", y = "Scores")+
scale_fill_manual(values = c("#868686FF", "#BB4038"))+
ggtitle("MAIA - Interoceptive Awareness") + theme(plot.title = element_text(hjust = 0.5))+#add label of y-axis
theme_classic(base_size = 9) +       #select underlying theme
theme(
plot.title = element_text(hjust = 0.5, size = 36, face = "bold"),  # Title size
axis.title.x = element_text(size = 30, face = "bold"),  # X-axis title size
axis.title.y = element_text(size = 30, face = "bold"),  # Y-axis title size
axis.text.x = element_text(angle = 45, hjust = 1, size = 14, face = "bold"),  # X-axis text size
axis.text.y = element_text(size = 14, face = "bold"),  # Y-axis text size
legend.title = element_text(size = 14, face = "bold"),  # Legend title size
legend.text = element_text(size = 12)  # Legend text size
) +
scale_x_discrete(
labels=c("Not-Worrying", "Trusting", "Self-Regulation", "Noticing", "Not-Distracting", "Body Listening", "Emotional Awareness", "Attention Regulation"))+
# ! careful in naming the graph (labels=c() ); print the order of the subscales wit maia.summary and then name it in the followig order for the graph
guides(fill=guide_legend(title="Groups"))+
geom_text(aes(label = significance), # define position
position = position_dodge(width = 0.9),
vjust = -0.5, size = 5, color = "black")  # Add significance asterisks above bars
maiaplot
# Save plot
plot.new()
tiff("Table2_MAIA_Scores.tiff", height = 360, width = 500, units = 'mm', compression = "lzw", res = 300)
maiaplot
dev.off() # Turn the PDF device off
#| output: false
#| warning: FALSE
#| error: FALSE
# remove everything that we stored in the environment
rm(list=ls())
# Load necessary libraries
library(readr)      # For read_csv()
library(dplyr)      # For data manipulation functions
library(gtsummary)  # For tbl_summary()
library(gt)         # For working with gt tables
library(ggplot2)    # For plotting
library(ggpubr)     # For ggboxplot() and adding jitter
library(ggsignif)   # For statistical comparisons in plots
library(gridExtra)  # For arranging multiple plots in a grid
library(openxlsx)   # For saving Excel files
library(tidyr)      # For reshaping data
library(plyr)       # For revalue() function
library(car)        # testing assumptions in models
library(rstatix)    # running ancova models
library(lmerTest)
# load prepared and cleaned file from 00_preparation: df_yyyymmdd.csv
setwd("/Users/nataschastoffel/Documents/GitHub/interoception_NS")
Data.CRF <- read_csv("~/Documents/GitHub/interoception_NS/data/processed/12-2024/Data.CRF_FINAL_20241218.csv")
df<-Data.CRF[-c(1)] # if there is the additional column (otherwise it will not work to merge as the columns are identical)
df <- df[complete.cases(df$maia_total, df$hbt_accuracy_mean), ] # complete cases in interoceptive variables of interest
# define medication as it interstes us, that have an effect on the BRAIN (which is all psychotropic medication, benzos, morphiom/opiod pain killers and antiepileitc medication)
df <- df %>%
mutate(medication_brain = if_else(psychotropic_medication == 1 | sleep_benzo == 1 | pain_antiepi == 1 | pain_morph_opio == 1, 1, 0))  # 1=yes so if there is a yes in any of the different medication categories, there will be a 1 in medication_brain
# create a common depression-anxiety variable as it highly correlates (and to not mess with the models)
df <- df %>%
mutate(anx_dep_SUM = stai_t + bdi)# create one variable for the trait anxiety and depression to use as one variable in the model
#making sure everything is stored as the correct variable
df$group <- as.factor(df$group)
df$sex <- as.factor(df$sex)
df$medication_brain <- as.factor(df$medication_brain)
df$menopause <- as.factor(df$menopause)
df$contraception <- as.factor(df$contraception)
# define required subgroups
df_female <- df[df$sex == "1", ]
df_male <- df[df$sex == "2", ]
df_HC <- df[df$group == "0", ]
df_FND <- df[df$group == "1", ]
# outlier (typo in BMI for one female)
mean_bmi <- mean(df_female$bmi, na.rm = TRUE)
df$bmi[df$bmi < 10] <- mean_bmi # due to typo there is a wrong BMI that should be changed with the MEAN (of females)
df_female <- df[df$sex == "1", ] # redo the female subgroup (after it has been changed)
### Summary Table for the new sample ---------------------------------------------
df_tbl <- df %>%
mutate(sex = factor(sex, levels = c("1", "2"), labels = c("female", "male"))) %>%
mutate(group = factor(group, levels = c("0", "1"), labels = c("HC", "FND")))  %>%
mutate(medication_brain = factor(medication_brain, levels = c("0", "1"), labels = c("no", "yes, intake of these medication"))) %>%
mutate(menopause = factor(menopause, levels = c("0", "1"), labels = c("no", "yes, in menopause")))
# Table 1 for Demographics
Data.t <- select(df_tbl, c("group", "sex", "age", "medication_brain", "bmi", "bdi", "stai_s", "stai_t"))
# Create the table summary
tbl1 <- Data.t %>%
tbl_summary(
by = group, # Grouping by 'group'
missing = "no",
statistic = list(
age = "{mean} ({sd})",
sex = "{n} ({p})",
medication_brain ="{n} ({p})",
bmi = "{median} ({IQR})",
bdi = "{median} ({IQR})",
stai_s = "{median} ({IQR})",
stai_t = "{mean} ({sd})"
),
digits = list(age = 1, sex = 1, medication_brain = 1, menopause = 1, bmi = 1, stai_s = 1, stai_t = 1, ctq_total = 1, sdq = 1),
label = list(
age = "Age (mean)",
sex = "Sex",
medication_brain = "Medication (psychotropic, antiepileptic, opioids, benzos)",
bmi = "Body Mass Index (median)",
bdi = "Depression (median)",
stai_s = "State Anxiety (median)",
stai_t = "Trait Anxiety (mean)"    )
) %>%
modify_header(list(label ~ "**Variable**")) %>%
modify_caption("**Demographics Overview**") %>%
modify_spanning_header(c("stat_1", "stat_2") ~ "**Group**") %>%
add_p(
test = list(
age = "t.test",
bmi = "wilcox.test",
bdi = "wilcox.test",
stai_s = "wilcox.test",
stai_t = "t.test",
sex = "fisher.test",
medication_brain = "fisher.test"
)
) %>%
add_overall(last = FALSE)
# Print the table
tbl1
# Create the table summary
tbl1 <- Data.t %>%
tbl_summary(
by = group, # Grouping by 'group'
missing = "no",
statistic = list(
age = "{mean} ({sd})",
sex = "{n} ({p})",
medication_brain ="{n} ({p})",
bmi = "{median} ({IQR})",
bdi = "{median} ({IQR})",
stai_s = "{median} ({IQR})",
stai_t = "{mean} ({sd})"
),
digits = list(age = 1, sex = 1, medication_brain = 1, menopause = 1, bmi = 1, stai_s = 1, stai_t = 1, ctq_total = 1, sdq = 1),
label = list(
age = "Age (mean)",
sex = "Sex",
medication_brain = "Medication (psychotropic, antiepileptic, opioids, benzos)",
bmi = "Body Mass Index (median)",
bdi = "Depression (median)",
stai_s = "State Anxiety (median)",
stai_t = "Trait Anxiety (mean)"    )
) %>%
modify_header(list(label ~ "**Variable**")) %>%
modify_caption("**Demographics Overview**") %>%
modify_spanning_header(c("stat_1", "stat_2") ~ "**Group**") %>%
add_p(
test = list(
age = "t.test",
bmi = "wilcox.test",
bdi = "wilcox.test",
stai_s = "wilcox.test",
stai_t = "t.test",
sex = "fisher.test",
medication_brain = "fisher.test"
)
) %>%
add_overall(last = FALSE)
# Table 1 for Demographics
Data.t <- select(df_tbl, c("group", "sex", "age", "medication_brain", "bmi", "bdi", "stai_s", "stai_t"))
# Table 1 for Demographics
Data.t <- select(df_tbl, group, sex, age, medication_brain, bmi, bdi, stai_s, stai_t)
View(df)
# heartrate variability
shapiro.test(df$rmssd_hep) #  NOT normally distributed with  p < 0.05
res<-wilcox.test(df$rmssd_hep[df$group=="1"], df$rmssd_hep[df$group=="0"])
res #  W = 1203.5, p-value = 0.04171
stat.test # subscales worrying, trusting, body and attention regulation are sig difference across groups
stat.test <- maia_long %>%
group_by(subscale) %>%
t_test(score ~ group) %>%
adjust_pvalue(method = "fdr") %>% # if you don't want to correct for multiple comparisons you can comment out this line
add_significance()
stat.test # subscales worrying, trusting, body and attention regulation are sig difference across groups
# 1.3.2 MAIA -----
maia<-dplyr::select(df, pcode, group, maia_attreg, maia_note, maia_distr, maia_worry, maia_aware, maia_sfreg, maia_body, maia_trust)
#Make long data
maia_long <- gather(maia, key = "subscale", value = "score", -pcode, -group) # make data set long (so that every p code has 6 rows, one for each of the subscores of ctq)
maia_long$subscale<-as.factor(maia_long$subscale)
maia_long$subscale <- factor(maia_long$subscale, levels = rev(levels(maia_long$subscale)))
maia_long$score<-as.numeric(maia_long$score)
maia_long$group<-as.factor(maia_long$group)
maia_long$group <- factor(maia_long$group, levels = c(0, 1), labels = c("HC", "FND"))
# Calculate mean, median, CI, SE
library(dplyr)
alpha=0.05
maia.summary <- maia_long %>%
group_by(group,subscale)%>%
dplyr::summarise(
se = sd(score) / sqrt(length(score)),
t=qt((1-alpha)/2 + .5, length(score)-1),   # tend to 1.96 if sample size is big enough
CI=t*se,
score = mean(score), .groups = 'drop') # you can use here mean or median depending on data distribution
maia.summary # according to this order name the lables in the following plot p
# STATISTICS
# Multiple t-tests using FDR correction for multiple comparisons (FDR or bonferroni)
library(rstatix)
stat.test <- maia_long %>%
group_by(subscale) %>%
t_test(score ~ group) %>%
adjust_pvalue(method = "fdr") %>% # if you don't want to correct for multiple comparisons you can comment out this line
add_significance()
stat.test # subscales worrying, trusting, body and attention regulation are sig difference across groups
