---
title: "RRST : Analysis - sample excluding outlier"
author: "Natascha Stoffel"
date: "`r date()`"
format:
  html:
    embed-resources: true
    toc: true #to show table of contents
editor: visual
---

# 0) Data and Preparation

Respiratory Interoception; Analysis of participants of site CH from 15.10.23 until 10.09.2024;

```{r}
#| output: false
#| warning: FALSE
#| error: FALSE

# remove everything that we stored in the environment
rm(list=ls()) 

# Load necessary libraries
library(readr)
library(dplyr)
library(rstatix)
library(gtsummary)
library(ggplot2)
library(ggpubr)
library(openxlsx)
library(gt)
library(stats)
library(grDevices)
library(car)
library(stringr)  
library(lubridate)
library(Hmisc)

### 0.0 PREPARATION -----------------------------------------------------------
# load prepared and cleaned file from 00_preparation: df_yyyymmdd.csv
setwd("/Users/nataschastoffel/Documents/GitHub/interoception_NS")
df_RRST <- read_csv("/Users/nataschastoffel/Documents/GitHub/interoception_NS/data/processed/11-2024/Data.RRST_FINAL_20241120.csv")
df <- df_RRST[-c(1)] # remove additional column 

# factor variables
factor_variables <- c('group', 'sex', 'psychotropic_medication', 'menopause', 'contraception')
# Apply as.numeric to the selected columns
df[factor_variables] <- lapply(df[factor_variables], as.factor)

# numeric variables
numeric_variables <- c('age', 'bmi', 'bdi', 'stai_s', 'stai_t', 'maia_total',
                     'sdq', 'ctq_total', 'ias', 'rrst_sensitivity', 
                     'traitPE_maiaRRST', 'traitPE_iasRRST', 'metascore')
# Apply as.numeric to the selected columns
df[numeric_variables] <- lapply(df[numeric_variables], as.numeric)


```

# 1) Having a Look at the Data 

## 1.1) Identifying the Outlier to exclude

```{r}
# Testing Outlier using boxplot (standard deviation)
df %>% 
  group_by(group) %>%
  identify_outliers(rrst_sensitivity)
# one outlier identified = P063 for rrst_sensitivity 

#### Box-Plot with Jitter
plotBoxplotGroups <- function(df, var , tit ){ 
  plot <- ggplot(df, aes(x = group, y = var, fill = group)) + 
    geom_boxplot(show.legend = TRUE) + # Show legend for boxplot
    labs(y = "Score") + 
    theme_classic() + 
    scale_fill_manual(values = c("#868686FF", "#BB4038")) + 
    scale_x_discrete(labels = c("HC", "FND")) +  
    guides(fill = "none") + # Remove the legend
    ggtitle(tit) +
    xlab("") +
    geom_jitter(shape = 16, position = position_jitter(0.2))
  
  return(plot)
}

p1 <- plotBoxplotGroups(df, (df$rrst_sensitivity), "Respiration Sensitivity") + 
  stat_compare_means(method = "t.test", paired = FALSE, label.x = 1.3)
p1

# Filter the rows where rrst_sensitivity is greater than 8 and display pcode (visually detected as extreme)
filtered_pcodes <- df[df$rrst_sensitivity > 8, "pcode"]
print(filtered_pcodes) 
# P063

# Calculate mean and standard deviation of rrst_sensitivity
mean_rrst <- mean(df$rrst_sensitivity)
sd_rrst <- sd(df$rrst_sensitivity)
# Define the threshold for filtering (mean + 2.5 * SD)
threshold <- mean_rrst + 2.5 * sd_rrst # 7.07
# Filter the pcodes for rrst_sensitivity greater than the threshold
filtered_pcodes <- df[df$rrst_sensitivity > threshold, "pcode"]
# View the result
filtered_pcodes
# P063

# Testing the Assumptions in the main model (rrst sensitivity predicted by clinical variables) 
# model:
lmrrst <- lm(
  rrst_sensitivity ~ group + sex + bmi + psychotropic_medication + stai_t + bdi,
  data = df)
# testing assumptions
plot(lmrrst, which=1) # testing the assumptions of Linearity and Homoscedasticity with residuals vs fitted plot: the line should more or less be straight: observation 56 is a clear outlier
plot(lmrrst, which=2) # testing the assumptions normality of residuals with  standardized quantiles: the data points should more or less on the line: observation 56 is a clear outlier (not as extreme but also noted: 81, 65)
plot(lmrrst, which=3) # testing the assumption of homoscedasticity with scale-location plot--> if there is an incline then we should consider log transformation: observation 56 is a clear outlier (not as extreme but also noted: 81, 65)
plot(lmrrst, which=5) # testing leverage and influence = when an outlier has a lot of leverage over the regression line (high leverage & large residual; these points will lie close to the right top or bottom corners): observation 56 is a clear outlier (not as extreme but also noted: 81, 6)
 # observation 56 (consistent outlier) = P063

df_exclusion <- df[df$pcode != "63", ]

p1b <- plotBoxplotGroups(df_exclusion, (df_exclusion$rrst_sensitivity), "Respiration Sensitivity") + 
  stat_compare_means(method = "t.test", paired = FALSE, label.x = 1.3)
print(p1b)

p1b

# Summary of Change - depending on Exclusion of Outlier
summary(df$rrst_sensitivity) 
summary(df_exclusion$rrst_sensitivity) 
??summary
# for statistical reasons we EXCLUDE P063 from the dataset
df <- df[df$pcode != "63", ]


```

## 1.2) Testing Distribution of Variables

```{r}
#| output: false
#| warning: FALSE
#| error: FALSE

# Normality of Data -------------------
shapiro.test(df$rrst_sensitivity) #  normally distributed
shapiro.test(df$metascore)# NOT normally distributed
shapiro.test(df$metascore[df$group == "1"]) # patients within themselves are NOT normally distributed
shapiro.test(df$metascore[df$group == "0"]) # controls within themselves are normally distributed

shapiro.test(df$age) # normally distributed

shapiro.test(df$bdi) #  NOT normally distributed : p < 0.05
shapiro.test(df$bdi[df$group == "1"]) # patients within themselves are normally distributed
shapiro.test(df$bdi[df$group == "0"]) # controls within themselves are NOT normally distributed

shapiro.test(df$stai_t) #  normally distributed 

shapiro.test(df$stai_s) #  NOT normally distributed 
shapiro.test(df$stai_s[df$group == "1"]) # patients within themselves are normally distributed
shapiro.test(df$stai_s[df$group == "0"]) # controls within themselves are NOT normally distributed : p < 0.05

shapiro.test(df$ctq_total) #  NOT normally distributed : p < 0.05
shapiro.test(df$ctq_total[df$group == "1"]) # patients within themselves are also NOT normally distributed
shapiro.test(df$ctq_total[df$group == "0"]) # controls within themselves are also NOT normally distributed

shapiro.test(df$sdq) #  NOT normally distributed : p < 0.05
shapiro.test(df$sdq[df$group == "1"]) # patients within themselves are NOT normally distributed
shapiro.test(df$sdq[df$group == "0"]) # controls within themselves are NOT normally distributed : p < 0.05

shapiro.test(df$maia_total) # normally distributed 
shapiro.test(df$traitPE_maiaRRST) # normally distributed with p < 0.05

shapiro.test(df$ias) # NOT normally distributed 
shapiro.test(df$traitPE_iasRRST) # normally distributed with p < 0.05

shapiro.test(df$bmi) # NOT normally distributed with p < 0.05
shapiro.test(df$bmi[df$group == "1"]) # within patients bmi is normally distributed 
shapiro.test(df$bmi[df$group == "0"]) # within control bmi is NOT normally distributed with p < 0.05


```

## 1.3) Testing Collinearity of Variables

```{r}
#| output: false
#| warning: FALSE
#| error: FALSE

## testing co-dependency of variables by creating a correlation matrix -----
# in order to run a correlation, all variables must be numeric (but we create new variables, so it wont mess with our variables that we defiend as factors)
corr_matrix <- cor(df[, c("age","bmi", "bdi", "stai_s", "stai_t", "ctq_total",
                          "ias", "maia_total", "sdq", "rrst_sensitivity", 
                          "traitPE_iasRRST", "traitPE_maiaRRST", "metascore")], use = "complete.obs")

# Set the cutoff for high correlations, that we then want to exclude
cutoff <- 0.7

# Find the indices of correlations that are greater than 0.8 and exclude self-correlations (diagonal)
high_corr <- which(abs(corr_matrix) > cutoff & abs(corr_matrix) < 1, arr.ind = TRUE)

# Display the pairs of variables with high correlations
high_corr_pairs <- data.frame(
  Var1 = rownames(corr_matrix)[high_corr[, 1]],
  Var2 = colnames(corr_matrix)[high_corr[, 2]],
  Correlation = corr_matrix[high_corr]
)

# View the pairs
print(high_corr_pairs) # stai and bdi are highly correlated, which we do accept though as this is a common clinical happening
cor.test(df$bdi, df$stai_t) #

df <- df %>%
  mutate(anx_dep_SUM = stai_t + bdi)# create one variable for the trait anxiety and depression to use as one variable in the model

```

# 2) Group Differences

```{r}
#| output: false
#| warning: FALSE
#| error: FALSE

### 1.2 Group Differences as Baseline of Variables of Interst ---------------------------------------------
# parametric t-test for NORMALLY distributed data
res<-t.test(df$rrst_sensitivity[df$group=="1"], df$rrst_sensitivity[df$group=="0"])
res # SIG difference between groups
res<-t.test(df$stai_t[df$group=="1"], df$stai_t[df$group=="0"])
res # SIG difference between groups with p < 0.05
res<-t.test(df$maia_total[df$group=="1"], df$maia_total[df$group=="0"])
res # SIG difference between groups with p < 0.05
res<-t.test(df$traitPE_iasRRST[df$group=="1"], df$traitPE_iasRRST[df$group=="0"])
res # no difference between groups with p < 0.05
res<-t.test(df$traitPE_maiaRRST[df$group=="1"], df$traitPE_maiaRRST[df$group=="0"])
res # no sig difference between groups

# non paramatric wilcox test for NOT normally distributed data 
res<-wilcox.test(df$metascore[df$group=="1"], df$metascore[df$group=="0"])
res # no sig difference between groups
res<-wilcox.test(df$ias[df$group=="1"], df$ias[df$group=="0"])
res # SIG difference between groups
res<-wilcox.test(df$bdi[df$group=="1"], df$bdi[df$group=="0"])
res # SIG difference between groups with p < 0.05
res<-wilcox.test(df$stai_s[df$group=="1"], df$stai_s[df$group=="0"])
res # SIG difference between groups with p < 0.05
res<-wilcox.test(df$ctq_total[df$group=="1"], df$ctq_total[df$group=="0"])
res # SIG difference between groups with p < 0.05
res<-wilcox.test(df$sdq[df$group=="1"], df$sdq[df$group=="0"])
res # SIG difference between groups with p < 0.05
res<-wilcox.test(df$ias[df$group=="1"], df$ias[df$group=="0"])
res # no sig difference between groups
res<-wilcox.test(df$bmi[df$group=="1"], df$bmi[df$group=="0"])
res # no sig difference between groups

```

## 2.1) Demographic Summary Table

```{r}
#| warning: FALSE
#| error: FALSE

# define required subgroups
df_female <- df[df$sex == "1", ]
df_male <- df[df$sex == "2", ]

df_HC <- df[df$group == "0", ]
df_FND <- df[df$group == "1", ]


# overview across group and sex distribution
tbl <- df %>%
  mutate(sex = factor(sex, levels = c("1", "2"), labels = c("female", "male"))) %>%
  mutate(group = factor(group, levels = c("0", "1"), labels = c("HC", "FND")))
tbl1<-table(tbl$group,tbl$sex)
tbl1

# overview for mean age across group
summary_stats <- tbl %>%
  group_by(group) %>%
  get_summary_stats(age, type = "full") # 'full' includes mean, SD, min, max, etc.
print(summary_stats)

res<-t.test(df$age[df$group == "0"], df$age[df$group == "1"]) # 
res # no sig difference between the groups in age


# SUMMARY TABLE DEMOGRAPHICS -----
df_tbl <- df %>%
  mutate(sex = factor(sex, levels = c("1", "2"), labels = c("male", "female"))) %>%
  mutate(group = factor(group, levels = c("0", "1"), labels = c("HC", "FND"))) %>%
  mutate(psychotropic_medication = factor(psychotropic_medication, levels = c("0", "1"), labels = c("no", "yes"))) 

library(gtsummary)
library(dplyr)

# Select relevant columns from df_tbl
Data.t <- select(df_tbl, c("group", "sex", "age", "psychotropic_medication", "smoke_crf", "bmi", "bdi", "stai_t", "ctq_total", "sdq"))

# Create the summary table
tbl1 <- Data.t %>%
    tbl_summary(
    by = group,
    missing = "no",
    statistic = list(
      age = "{mean} ({sd})",
      sex = "{n} ({p})",
      psychotropic_medication = "{n} ({p})",
      smoke_crf = "{n} ({p})",
      bmi = "{median} ({p25}, {p75})",
      bdi = "{median} ({p25}, {p75})",
      stai_t = "{mean} ({sd})",
      ctq_total = "{median} ({p25}, {p75})",
      sdq = "{median} ({p25}, {p75})"
    ),
    digits = list(age = 1, sex = 1, psychotropic_medication = 1, smoke = 1, bmi = 1, bdi = 1, stai_t=1, ctq_total=1, sdq=1),
    label = list(age = "Age, mean (SD)",
                 sex = "Sex, count (%)",
                 psychotropic_medication= "Intake of psychotropic Medication, count (%)",
                 smoke_crf = "Smoking, count (%)",
                 bmi = "Body Mass Index kg/m², median (IQR)",
                 bdi = "Depression using BDI-II, median (IQR), ",
                 stai_t = "Trait Anxiety using STAI, median (IQR)",
                 ctq_total = "Childhood Trauma, using CTQ total, median (IQR)",
                 sdq = "Dissociation using SDQ-20, median (IQR)")
  ) %>%
  modify_header(list(label ~ "**Variable**")) %>%
  modify_caption("**Demographics Overview**") %>%
  modify_spanning_header(c("stat_1", "stat_2") ~ "**Group**") %>%
  add_p( test = list(
        age ~ "t.test",            # t-test for numeric variables (even though NOT normally distributed; rather use wilcox and then the median instead of the mean??)
        bmi ~ "wilcox.test",            # t-test for bmi
        sex ~ "chisq.test",        # chi-square test for factor variables
        psychotropic_medication ~ "chisq.test",  # Fisher's exact test for small samples
        smoke_crf ~ "chisq.test",  # Fisher's exact test for small samples
        bdi ~ "wilcox.test",
        stai_t ~ "t.test",
        ctq_total = "wilcox.test",
        sdq="wilcox.test"
      )) %>% 
  add_overall(last = FALSE)

# Display the table
tbl1


```

## 2.2) FND Summary Table

```{r}
#| warning: FALSE
#| error: FALSE
# 1.4 SUMMARY TABLE for FND symptoms -----
# create variable of duation of months
df_FND <- df_FND %>%
  mutate(duration_months = interval(date_symptom_onset, date) %/% months(1)) # calculate month duration

as.numeric(df_FND$duration_months)

# Select only the defined variables
df_tbl <- df_FND %>%
  mutate(sex = factor(sex, levels = c("1", "2"), labels = c("female", "male"))) 

library(gtsummary)
library(dplyr)

# Select relevant columns from df_tbl
Data.t <- select(df_tbl, c("sex", "duration_months", "fds", "motor", "weakness", "sensory", "pppd", "cognitive"))

# Create the summary table
tbl <- Data.t %>%
  tbl_summary(
    by = sex,
    missing = "no",
    statistic = list(
      duration_months = "{mean} ({sd})",
      fds = "{n} ({p})",
      motor = "{n} ({p})",
      weakness = "{n} ({p})",
      sensory = "{n} ({p})",
      pppd = "{n} ({p})",
      cognitive = "{n} ({p})"
      ),
    digits = list(duration_months = 1,fds = 1,motor = 1,weakness = 1,sensory = 1,pppd = 1,cognitive = 1),
    label = list(
      sex = "Sex",
      duration_months = "Symptom Duration [in months]",
      fds = "Functional Dissociative Seizures [yes]",
      motor = "motor + symptoms [yes]",
      weakness = "motor - symptoms [yes]",
      sensory = "sensory symptoms [yes]",
      pppd = "dizziness (PPPD) [yes]",
      cognitive = "cognitive symptoms [yes]"
    )
  ) %>%
  modify_header(list(label ~ "**Variable**")) %>%
  modify_caption("**Clinical Characteristics**") %>%
  modify_spanning_header(c("stat_1", "stat_2") ~ "**Group**") %>%
  add_overall(last = FALSE)

# Print the summary table
tbl
```

## 2.3) Visualization of Group Differences

Here we visualize the different distribution per group across all variables

```{r}
#| warning: FALSE
#| error: FALSE
df$group <- as.factor(df$group)

plotViolinGroups <- function(df, var , tit ){ 
  plot <-ggplot(df, aes(x=group, y=var, fill=group)) + # this is just the ground structure. We have group on x axis, our variable score on y, and we want to seperate the groups. 
    geom_violin(show.legend = FALSE, width = 0.7, trim = FALSE, alpha = 0.8)+ # here we say what kind of plot we want to make; namely violin to show the distrubition of the original data (width to make it less wide and thus prettier) 
    stat_summary(show.legend = FALSE, fun = median, geom = "point", color = "black", size = 2) +  # Add median point without legend
    labs(y = "Score") + # These are just the different titles
    theme_classic()+ # here we have the background, simple white :)
    scale_fill_manual(values = c("#868686FF", "#BB4038"))+ # google HEX codes and find your own colours. 
    scale_x_discrete(labels=c("Controls", "Patients"))+  # these are our labels for the x axis
    guides(fill=guide_legend(title="Timepoint"))+ # and a title for our legend
    ggtitle(tit) +
    xlab("")
  
  return(plot)
}

p1 <- plotViolinGroups(df,df$bdi,"BDI - Depression")+ ggpubr::stat_compare_means(method = "wilcox.test", paired = FALSE, label.x = 1.3)
p1


p2 <- plotViolinGroups(df,df$stai_s,"STAI - State Anxiety")+ stat_compare_means(method = "t.test", paired = FALSE, label.x = 1.3)
p3 <- plotViolinGroups(df,df$stai_t,"STAI - Trait Anxiety")+ stat_compare_means(method = "wilcox.test", paired = FALSE, label.x = 1.3)
gridExtra::grid.arrange(p2, p3, ncol = 2)


p4 <- plotViolinGroups(df,df$ctq_total,"CTQ - Childhood Trauma")+ stat_compare_means(method = "wilcox.test", paired = FALSE, label.x = 1.3)
p4

p5 <- plotViolinGroups(df,df$sdq,"SDQ-20 - Dissociation")+ stat_compare_means(method = "wilcox.test", paired = FALSE, label.x = 1.3)
p5


p6 <- plotViolinGroups(df,df$maia_total,"MAIA - Interoceptive Awareness")+ stat_compare_means(method = "t.test", paired = FALSE, label.x = 1.3)
p6


p7 <- plotViolinGroups(df,df$ias,"IAS - Interoceptive Accuracy")+ stat_compare_means(method = "wilcox.test", paired = FALSE, label.x = 1.3)
p7


p8 <- plotViolinGroups(df,df$traitPE_maiaRRST,"TraitPE MAIA-RRST")+ stat_compare_means(method = "t.test", paired = FALSE, label.x = 1.3)
p9 <- plotViolinGroups(df,df$traitPE_iasRRST,"TraitPE IAS-RRST")+ stat_compare_means(method = "t.test", paired = FALSE, label.x = 1.3)
gridExtra::grid.arrange(p8, p9, ncol = 2)


p10 <- plotViolinGroups(df,df$rrst_sensitivity,"Respiratory Sensitivity")+ stat_compare_means(method = "t.test", paired = FALSE, label.x = 1.3)
p11 <- plotViolinGroups(df,df$metascore,"Respiratory Metacognition")+ stat_compare_means(method = "wilcox.test", paired = FALSE, label.x = 1.3)
gridExtra::grid.arrange(p10, p11, ncol = 2)


# Table for dependent Variables: group differences
df_tbl <- df %>%
  mutate(group = factor(group, levels = c("0", "1"), labels = c("HC", "FND"))) 
  
Data.t <- select(df_tbl, c("group", "maia_total","traitPE_maiaRRST", "ias", "traitPE_iasRRST", "rrst_sensitivity" , "metascore"))
library(gtsummary)
tbl2 <- Data.t %>%
  tbl_summary(
    by = group,
    missing = "no",
    statistic = list(
      maia_total = "{mean} ({sd})",
      traitPE_maiaRRST = "{mean} ({sd})",
      ias = "{median} ({IQR})",
      traitPE_iasRRST = "{mean} ({sd})",
      rrst_sensitivity = "{mean} ({sd})",
      metascore = "{median} ({IQR})"
    ),
    digits = list(maia_total = 1, traitPE_maiaRRST = 1, ias = 1, traitPE_iasRRST = 1, 
                  rrst_sensitivity = 2, metascore = 2),
    label = list(maia_total= "Interoceptive Awareness Self-Report - MAIA, Mean, (SD)",
                 traitPE_maiaRRST= "Respiratory Trait-Prediction-Error, MAIA-RRST, Mean (SD)",
                 ias= "Interoceptive Accuracy Self-Report - IAS, Median (IQR)",
                 traitPE_iasRRST = "Respiratory Trait-Prediction-Error, IAS-RRST, Mean (SD)",
                 rrst_sensitivity= "Respiratory Sensitivity - RRST, Mean (SD)",
                 metascore= "Respiratory Metacognition - AUC, Median (IQR)"
                 )
  ) %>%
  modify_header(list(label ~ "**Variable**")) %>%
  modify_caption("**Interoception Overview**") %>%
  modify_spanning_header(c("stat_1", "stat_2") ~ "**Group**") %>%
  add_p(
    test = list(
      maia_total = "t.test",            
      traitPE_maiaRRST = "t.test",            
      ias = "wilcox.test",        
      traitPE_iasRRST = "t.test", 
      rrst_sensitivity = "t.test",
      metascore = "wilcox.test")
    ) %>%
    add_overall(last = FALSE)
tbl2

# calculation of cohens d for variable of interest
# Define the function
calculate_cohens_d <- function(data, variable, group_var, group1, group2) {
  # Subset the data for each group
  group1_data <- data[[variable]][data[[group_var]] == group1]
  group2_data <- data[[variable]][data[[group_var]] == group2]
  
  # Calculate means and standard deviations
  mean1 <- mean(group1_data, na.rm = TRUE)
  mean2 <- mean(group2_data, na.rm = TRUE)
  sd1 <- sd(group1_data, na.rm = TRUE)
  sd2 <- sd(group2_data, na.rm = TRUE)
  
  # Calculate sample sizes
  n1 <- sum(!is.na(group1_data))
  n2 <- sum(!is.na(group2_data))
  
  # Calculate pooled standard deviation
  sd_pooled <- sqrt(((n1 - 1) * sd1^2 + (n2 - 1) * sd2^2) / (n1 + n2 - 2))
  
  # Calculate Cohen's d
  cohens_d <- (mean1 - mean2) / sd_pooled
  
  # Return Cohen's d
  return(cohens_d)
}

# Calculate Cohen's d for variables of interest
cohens_d_rrst <- calculate_cohens_d(df, "rrst_sensitivity", "group", 1, 0) # group 1=FND, group=0 HC
print(cohens_d_rrst) # cohens d of -0.467 means with an effect size of 0.46 FND has LOWER values than HC

cohens_d_meta <- calculate_cohens_d(df, "metascore", "group", 1, 0) # group 1=FND, group=0 HC
print(cohens_d_meta) # cohens d of -0.128 means with an effect size of 0.128 FND has LOWER values than HC

cohens_d_maia <- calculate_cohens_d(df, "maia_total", "group", 1, 0) # group 1=FND, group=0 HC
print(cohens_d_maia) # cohens d of -0.786 means with an effect size of 0.786 FND has LOWER values than HC

cohens_d_ias <- calculate_cohens_d(df, "ias", "group", 1, 0) # group 1=FND, group=0 HC
print(cohens_d_ias) # cohens d of -0.651 means with an effect size of 0.651 FND has LOWER values than HC

cohens_d_bdi <- calculate_cohens_d(df, "bdi", "group", 1, 0) # group 1=FND, group=0 HC
print(cohens_d_bdi) # cohens d of 1.382615 means with an effect size of 1.382615 FND has HIGHER values than HC

cohens_d_stai_t <- calculate_cohens_d(df, "stai_t", "group", 1, 0) # group 1=FND, group=0 HC
print(cohens_d_stai_t) # cohens d of 0.829 means with an effect size of 0.829 FND has HIGHER values than HC

cohens_d_stai_s <- calculate_cohens_d(df, "stai_s", "group", 1, 0) # group 1=FND, group=0 HC
print(cohens_d_stai_s) # cohens d of 1.080 means with an effect size of 1.080 FND has HIGHER values than HC

cohens_d_ctq_total <- calculate_cohens_d(df, "ctq_total", "group", 1, 0) # group 1=FND, group=0 HC
print(cohens_d_ctq_total) # cohens d of 0.662 means with an effect size of 0.662 FND has HIGHER values than HC

cohens_d_sdq <- calculate_cohens_d(df, "sdq", "group", 1, 0) # group 1=FND, group=0 HC
print(cohens_d_sdq) # cohens d of 1.500 means with an effect size of 1.500 FND has HIGHER values than HC

cohens_d_bmi <- calculate_cohens_d(df, "bmi", "group", 1, 0) # group 1=FND, group=0 HC
print(cohens_d_bmi) # cohens d of 0.557 means with an effect size of 0.6621177 FND has HIGHER values than HC

# for binary variable we calcualte the ODDS RATIO
model <- glm(group ~ psychotropic_medication, data = df, family = binomial)
summary(model)
# Extract Odds Ratio
odds_ratio <- exp(coef(model))
odds_ratio # OR of 17.42

```

# 3) Symptom Severity as dependent variables

## 3.1 ) Correlations

```{r}
#| warning: FALSE
#| error: FALSE

# SIMPLE CORRELATION OF INTEROCEPTIVE VARIABLES WITH SYMPTOM SEVERITY (that we have for both groups; SDQ)
cor.test(df$rrst_sensitivity, df$sdq, method = "pearson") 
 # p-value = 0.0002628,  cor = -0.3737694 

cor.test(df$metascore, df$sdq, method = "pearson")  
# p-value = 0.01012, cor = -0.2683359 

cor.test(df$traitPE_iasRRST, df$sdq, method = "pearson") 
# p-value = 0.470, cor= -0.07664066 

cor.test(df$traitPE_maiaRRST, df$sdq, method = "pearson") 
#  p-value = 0.9064, cor = -0.01250354 

```

## 3.2 ) Regression Analysis for Symptom Severity

### 3.2.1 ) Different Variables of Symptom Severity

```{r}
#| warning: FALSE
#| error: FALSE
# Compute the correlation matrix with variables of symptom severity to see whether they correlate
# Select the desired variables
severity_variables <- df_FND[, c("sfmdrs", "cgi", "sdq", "sum_positive_signs", "sum_severity")]

# Compute the correlation matrix with rcorr
correlation_results <- Hmisc::rcorr(as.matrix(severity_variables))

# Extract correlation coefficients
cor_matrix <- correlation_results$r

# Extract p-values
p_matrix <- correlation_results$P

# Print results
cor_matrix
p_matrix

# SIG correlations of different symptom severity scores
### CGI & SFMDRS corr: r= 0.5841928 , p=3.136863e-05
### CGI & SUM_POS corr: r= 0.5531214  2, p=9.864238e-05
### SDQ & SUM_POS corr: r=0.4738588, p=1.157504e-03
### CGI & SUM_SEVERITY corr: r=0.43742577 , p=0.002985648

cor.test(df$bmi, df$rrst_sensitivity)
# rrst sensitivity and BMI are NOT correlated (-0.02, p=0.82)

```

### 3.2.2 A) SDQ (separate per group)

```{r}
#| warning: FALSE
#| error: FALSE

#SDQ - RRST sensitviity
sdq_lm <- lm(formula = sdq ~  rrst_sensitivity + sex + age,
                 data = df_FND) 
summary(sdq_lm)  # RRST sensitivity

sdq_lm <- lm(formula = sdq ~  rrst_sensitivity + sex + age + psychotropic_medication + bmi,
                 data = df_FND) 
summary(sdq_lm)  # RRST sensitivity ; after controling for covariates of no-interst

sdq_lm_affective <- lm(formula = sdq ~  rrst_sensitivity + sex + age + psychotropic_medication + bmi + anx_dep_SUM,
                 data = df_FND) 
summary(sdq_lm_affective)  # also including affective score as covariate of no interest


# SAME FOR HC ? 
#SDQ - RRST sensitviity
sdq_lm <- lm(formula = sdq ~  rrst_sensitivity + sex + age,
                 data = df_HC) 
summary(sdq_lm)  # no sig association


#SDQ - metascore
sdq_lm <- lm(formula = sdq ~  metascore  + sex + age,
                 data = df_FND) 
summary(sdq_lm)  #  metascore 

sdq_lm <- lm(formula = sdq ~  metascore + sex  + age + psychotropic_medication + bmi,
                 data = df_FND) 
summary(sdq_lm)  #  metascore still sig after controlling for covariates of no-interst


sdq_lm_affective <- lm(formula = sdq ~  metascore + sex + age + anx_dep_SUM + psychotropic_medication + bmi,
                 data = df_FND) 
summary(sdq_lm_affective)  # also including affective score as covariate of no interest

# SAME FOR HC?
#SDQ - metascore
sdq_lm <- lm(formula = sdq ~  metascore  + sex + age,
                 data = df_HC) 
summary(sdq_lm)  # no sig association

```

### 3.2.2 B) SDQ (full model group added as a factor)


```{r}
#| warning: FALSE
#| error: FALSE

sdq_lm <- lm(formula = sdq ~  rrst_sensitivity + group + sex + age,
                 data = df) 
summary(sdq_lm)  # SIG for RRST sensitivity

sdq_lm <- lm(formula = sdq ~  rrst_sensitivity + group + sex + age + psychotropic_medication + bmi,
                 data = df) 
summary(sdq_lm)  # only trend for RRST (0.06), and sig for GROUP and medication

sdq_lm_affective <- lm(formula = sdq ~  rrst_sensitivity + group + sex + age + psychotropic_medication + bmi + anx_dep_SUM,
                 data = df) 
summary(sdq_lm_affective)  # when contorlling further for affective symptoms, RRST sensitivity again sig associated with SDQ (important to control for affective symptoms when including group as a variable)

# metascore
sdq_lm <- lm(formula = sdq ~  metascore + group + sex + age,
                 data = df) 
summary(sdq_lm)  # SIG for metascore

sdq_lm <- lm(formula = sdq ~  metascore + group + sex + age + psychotropic_medication + bmi,
                 data = df) 
summary(sdq_lm)   # SIG for metascore after controlling for covariates

sdq_lm_affective <- lm(formula = sdq ~  metascore + group + sex + age + psychotropic_medication + bmi + anx_dep_SUM,
                 data = df) 
summary(sdq_lm_affective)   # still SIG for metascore after controlling for covariates including affective symptoms

```

### 3.2.2 C) SDQ (full model without group as a factor)


```{r}
#| warning: FALSE
#| error: FALSE
### ALTERNATIVELY: RUNNING SDQ FOR FULL MODELL
# RRST sensitivity
sdq_lm <- lm(formula = sdq ~  rrst_sensitivity + sex + age,
                 data = df) 
summary(sdq_lm)  # SIG for RRST sensitivity (and)

sdq_lm <- lm(formula = sdq ~  rrst_sensitivity + sex + age + psychotropic_medication + bmi,
                 data = df) 
summary(sdq_lm)  # RRST sensitivity ; after controling for covariates of no-interst SURVIVES CORRECTION 

sdq_lm_affective <- lm(formula = sdq ~  rrst_sensitivity + sex + age + psychotropic_medication + bmi + anx_dep_SUM,
                 data = df) 
summary(sdq_lm_affective)  # RRST sensitivity ; secondary, also controlling for AFFECTIVE symptoms: rrst effect remains !

# metascore
sdq_lm <- lm(formula = sdq ~  metascore + sex + age,
                 data = df) 
summary(sdq_lm)  # SIG

sdq_lm <- lm(formula = sdq ~  metascore + sex + age + psychotropic_medication + bmi,
                 data = df) 
summary(sdq_lm)  # still SIG; after controling for covariates of no-interst SURVIVES CORRECTION 

sdq_lm_affective <- lm(formula = sdq ~  metascore + sex + age + psychotropic_medication + bmi + anx_dep_SUM,
                 data = df) 
summary(sdq_lm_affective)  # still SIG; after controling for covariates of no-interst SURVIVES CORRECTION 


```

### 3.2.3 ) Symptom Scores (FND only)

```{r}
#| warning: FALSE
#| error: FALSE

#SFMDRS - RRST sensitvity
sfmdrslm <- lm(formula = sfmdrs ~  rrst_sensitivity + sex + age,
               data = df_FND) 
summary(sfmdrslm)   # no sig association


#SFMDRS - metascore
sfmdrslm <- lm(formula = sfmdrs ~  metascore + sex + age,
               data = df_FND) 
summary(sfmdrslm)   # no sig association

#CGI - RRST sensitivity
cgilm <- lm(formula = cgi ~  rrst_sensitivity + sex + age,
            data = df_FND) 
summary(cgilm) # no sig association


#CGI- metascore
cgilm <- lm(formula = cgi ~  metascore + sex + age,
            data = df_FND) 
summary(cgilm) # no sig association

# Sum score pos signs  (pos signs like wekaness in deltoid/stenocleido etc, co-contractions, give way weakness, hoover, hyposensitivity) - RRST sensitivity
sum_pos_lm <- lm(formula = sum_positive_signs ~  rrst_sensitivity + sex + age,
                 data = df_FND) 
summary(sum_pos_lm)   # no sig assocaition

#Sum score pos signs  - metascore
sum_pos_lm <- lm(formula = sum_positive_signs ~  metascore + sex + age,
                 data = df_FND) 
summary(sum_pos_lm)   # no sig assocaition


#Sum score severity (motor weakness and seizure frequency) - RRST sensitivity
sum_pos_lm <- lm(formula = sum_severity ~  rrst_sensitivity + sex + age,
                 data = df_FND) 
summary(sum_pos_lm)  # no sig assocaition

#Sum score severity - metascore
sum_pos_lm <- lm(formula = sum_severity ~  metascore + sex + age,
                 data = df_FND) 
summary(sum_pos_lm)  # no sig assocaition
```

# 4) SUPPLEMENTARY ANALYSIS: Interoception as dependent variable

### 4.1) Regression Analysis - separate per group

```{r}
# predciting rrst sensitvity with covariates,

lm<-lm(rrst_sensitivity ~  group + sex + age + psychotropic_medication + anx_dep_SUM + bmi,
  data = df)
summary(lm)

# predciting  rrst metascore with covariates
lm<-lm(metascore ~ group + sex + age + psychotropic_medication + anx_dep_SUM + bmi,
  data = df)
summary(lm)  


# predciting  traitPE uing RRST and MAIA with covariates
lm<-lm(traitPE_maiaRRST ~ group + age + sex + psychotropic_medication + anx_dep_SUM + bmi,
  data = df)
summary(lm)

# predciting  traitPE uing RRST and MAIA with covariates

lm<-lm(traitPE_iasRRST ~ group + age + sex + psychotropic_medication + anx_dep_SUM + bmi,
  data = df)
summary(lm) 


```

## 4.2) Visualization of sig association

```{r}
df_plot <- df %>%
  mutate(sex = factor(sex, levels = c("1", "2"), labels = c("female", "male"))) %>%
  mutate(group = factor(group, levels = c("0", "1"), labels = c("HC", "FND")))

# SDQ-RRST_sensitivity
RRST_sdq <- ggplot(df_plot, aes(x = sdq, y = rrst_sensitivity, color = as.factor(group))) +
  geom_point() +  # Scatterplot for both groups
  geom_smooth(method = "lm", se = TRUE) +  # Add regression lines and SE
  labs(x = "Dissociative Score (SDQ-20)", 
       y = "Respiratory Sensitivity (RRST)", 
       title = "Respiratory Interoception (FND vs HC)",
       color = "Group") +  # Label for the legend
  theme_minimal() +
  scale_color_manual(values = c("HC" = "#868686FF", "FND" = "#E95248")) + #custom colors
  theme(panel.grid = element_blank())  # Remove grid lines

RRST_sdq

# SDQ-metascore
meta_sdq <- ggplot(df_plot, aes(x = sdq, y = metascore, color = as.factor(group))) +
  geom_point() +  # Scatterplot for both groups
  geom_smooth(method = "lm", se = TRUE) +  # Add regression lines and SE
  labs(x = "Dissociative Score (SDQ-20)", 
       y = "Respiratory Metacognition (AUC)", 
       title = "Respiratory Interoception (FND vs HC)",
       color = "Group") +  # Label for the legend
  theme_minimal() +
  scale_color_manual(values = c("HC" = "#868686FF", "FND" = "#E95248")) + #custom colors
  theme(panel.grid = element_blank())  # Remove grid lines
meta_sdq


# Sex-RRST_sensitivity
RRST_sex <- ggplot(df_plot, aes(x = as.factor(sex), y = rrst_sensitivity, fill = as.factor(group))) +
  geom_boxplot() +  # Create the box plot
  geom_jitter(position = position_jitterdodge(jitter.width = 0.5, dodge.width = 0.75), color = "black", size = 1.5, alpha = 0.6) +  # Add jittered points in black
  labs(x = "Sex", 
       y = "TraitPE (HBT-IAS)", 
       title = "Trait-Prediction-Error HBT-IAS (FND vs HC)",
       fill = "Group") +  # Label for the legend
  theme_minimal() +
  scale_fill_manual(values = c("HC" = "#868686FF", "FND" = "#E95248"))+ #custom colors
  theme(panel.grid = element_blank())  # Remove grid lines
RRST_sex

# traitPEmaia-Anx-Dep
traitPEmaia_anxdep <- ggplot(df_plot, aes(x = anx_dep_SUM, y = traitPE_maiaRRST, color = as.factor(group))) +
  geom_point() +  # Scatterplot for both groups
  geom_smooth(method = "lm", se = TRUE) +  # Add regression lines and SE
  labs(x = "Anxiety & Depression Sum Score (STAI-T & BDI-II)", 
       y = "Trait-PredictionError (RRST-MAIA)", 
       title = "Interoceptive Trait-Prediction Error (FND vs HC)",
       color = "Group") +  # Label for the legend
  theme_minimal() +
  scale_color_manual(values = c("HC" = "#868686FF", "FND" = "#E95248")) + #custom colors
  theme(panel.grid = element_blank())  # Remove grid lines
traitPEmaia_anxdep
```

# Take Home Message

After excluding one outlier (FND patient \> 2.5 SD from mean, and outlier in terms of value, but also in testing the model fit in terms of normality/homoscedasticity of resiudaly) we have N=91.

Baseline: FND patients have higher intake of psychotropic medication (p\<0.001), higher BMI (p=0.019), higher Depression (p=4.2e-09) and Anxiety Scores (State: p=4.9e-06, Trait: p=4.1e-04), higher Experience of Childhood Trauma (p=0.0014) and Dissociation (p=1.4e-10) compared to controls.

Interoception: FND patients show to have lower interoceptive sensibility, judging from MAIA questionnaire (p=4.4e-04) and IAS (p=0.018) compared to controls The traitPE of RRST and these two questionnaires did not differ sig between the groups.

FND patients have lower interoceptive sensitivity (p=0.032), but no difference in metacognition (p=0.9), compared to controls.

SDQ is correlated with RRST sensitivity (r=-0.37, p-value = 0.00026), with metascore (r= -0.27, p-value = 0.01012), but not with TPE.

RRST sensitivity was associated with SDQ even after controlling for group, sex, anx-dep-sum and psychotropic medication (t= -2.452, p= 0.016307). Metascore was associated with SDQ eeven after controlling for group, sex, anx-dep-sum and psychotropic medication (t=-2.389, p=0.019150). These associations remained significant also when running the analysis separate for FND only (for SDQ associated with RRST: t = -2.124, p = 0.0401, and respectively with metascore: t = -2.042, p = 0.04798). For HC only, SDQ was not associated anymore with neither RRST sensitivity, nor metascore, but the affective sum score would be associated with the dissociative symptoms displayed in HC only (for SDQ associated with BDI-STAI-sum score: t = 3.45-3.73, p = 0.0006-0.0013)

The other variables of symptom severity (SFMDRS, CGI) were not associated with RRST sensitivity, nor metacognition.

For secondary analysis, if we regress our clinical variables (group, sex, psychotropic medication and anx-dep-sum as an affective score) on interoceptive variables, we see that the intake of psychotropic medication is negatively associated with RRST sensitivity (t=-3.069,0.00289) as well as postiviely with TPE(maia-RRST) (t=3.221, p= 0.001817). A higher TPE(maia-rrst) was further also associated with lower affective symptoms (t=-3.998, p=0.000137)
